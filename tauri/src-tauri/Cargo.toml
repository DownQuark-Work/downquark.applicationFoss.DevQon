[workspace]
resolver = "2"
members = [
    "./workspaces/enhancements/enhancements", # cargo new enhancements
    "./workspaces/enhancements/mechanisms", # cargo new mechanisms --lib ## SEE: enhancements/Cargo.toml
    "./workspaces/enhancements/widgets", # cargo new --lib widgets ## SEE: enhancements/Cargo.toml
    "./workspaces/utils/utils", # cargo new utils
    "./workspaces/utils/hooks", # cargo new hooks --lib ## SEE: utils/Cargo.toml
    "./workspaces/utils/logging", # cargo new --lib logging ## SEE: utils/Cargo.toml
]
default-members = [
  "./workspaces/enhancements/enhancements",
  "./workspaces/utils/utils"
  ]
[workspace.package]
version = "0.0.1-alpha"
edition = "2021"
authors = ["downquark <development.qonsole@downquark.work>"]

[package]
name = "devqon"
version = "0.0.1-alpha"
description = "DownQuark Development Qonsole"
authors = ["downquark <development.qonsole@downquark.work>"]
license = "GNU"
repository = ""
default-run = "devqon"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.1", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.5.4", features = [] }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
